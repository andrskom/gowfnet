// Code generated by MockGen. DO NOT EDIT.
// Source: cfg/base.go

// Package mocks is a generated GoMock package.
package mocks

import (
	cfg "github.com/andrskom/gowfnet/cfg"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDGetter is a mock of IDGetter interface
type MockIDGetter struct {
	ctrl     *gomock.Controller
	recorder *MockIDGetterMockRecorder
}

// MockIDGetterMockRecorder is the mock recorder for MockIDGetter
type MockIDGetterMockRecorder struct {
	mock *MockIDGetter
}

// NewMockIDGetter creates a new mock instance
func NewMockIDGetter(ctrl *gomock.Controller) *MockIDGetter {
	mock := &MockIDGetter{ctrl: ctrl}
	mock.recorder = &MockIDGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDGetter) EXPECT() *MockIDGetterMockRecorder {
	return m.recorder
}

// GetID mocks base method
func (m *MockIDGetter) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID
func (mr *MockIDGetterMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockIDGetter)(nil).GetID))
}

// MockTransitionInterface is a mock of TransitionInterface interface
type MockTransitionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTransitionInterfaceMockRecorder
}

// MockTransitionInterfaceMockRecorder is the mock recorder for MockTransitionInterface
type MockTransitionInterfaceMockRecorder struct {
	mock *MockTransitionInterface
}

// NewMockTransitionInterface creates a new mock instance
func NewMockTransitionInterface(ctrl *gomock.Controller) *MockTransitionInterface {
	mock := &MockTransitionInterface{ctrl: ctrl}
	mock.recorder = &MockTransitionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransitionInterface) EXPECT() *MockTransitionInterfaceMockRecorder {
	return m.recorder
}

// GetFrom mocks base method
func (m *MockTransitionInterface) GetFrom() []cfg.IDGetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFrom")
	ret0, _ := ret[0].([]cfg.IDGetter)
	return ret0
}

// GetFrom indicates an expected call of GetFrom
func (mr *MockTransitionInterfaceMockRecorder) GetFrom() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFrom", reflect.TypeOf((*MockTransitionInterface)(nil).GetFrom))
}

// GetTo mocks base method
func (m *MockTransitionInterface) GetTo() []cfg.IDGetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTo")
	ret0, _ := ret[0].([]cfg.IDGetter)
	return ret0
}

// GetTo indicates an expected call of GetTo
func (mr *MockTransitionInterfaceMockRecorder) GetTo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTo", reflect.TypeOf((*MockTransitionInterface)(nil).GetTo))
}

// MockTransitionRegistryInterface is a mock of TransitionRegistryInterface interface
type MockTransitionRegistryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTransitionRegistryInterfaceMockRecorder
}

// MockTransitionRegistryInterfaceMockRecorder is the mock recorder for MockTransitionRegistryInterface
type MockTransitionRegistryInterfaceMockRecorder struct {
	mock *MockTransitionRegistryInterface
}

// NewMockTransitionRegistryInterface creates a new mock instance
func NewMockTransitionRegistryInterface(ctrl *gomock.Controller) *MockTransitionRegistryInterface {
	mock := &MockTransitionRegistryInterface{ctrl: ctrl}
	mock.recorder = &MockTransitionRegistryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransitionRegistryInterface) EXPECT() *MockTransitionRegistryInterfaceMockRecorder {
	return m.recorder
}

// GetAsMap mocks base method
func (m *MockTransitionRegistryInterface) GetAsMap() map[string]cfg.TransitionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAsMap")
	ret0, _ := ret[0].(map[string]cfg.TransitionInterface)
	return ret0
}

// GetAsMap indicates an expected call of GetAsMap
func (mr *MockTransitionRegistryInterfaceMockRecorder) GetAsMap() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAsMap", reflect.TypeOf((*MockTransitionRegistryInterface)(nil).GetAsMap))
}

// GetByID mocks base method
func (m *MockTransitionRegistryInterface) GetByID(transitionID cfg.IDGetter) (cfg.TransitionInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", transitionID)
	ret0, _ := ret[0].(cfg.TransitionInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockTransitionRegistryInterfaceMockRecorder) GetByID(transitionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockTransitionRegistryInterface)(nil).GetByID), transitionID)
}

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetStart mocks base method
func (m *MockInterface) GetStart() cfg.IDGetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStart")
	ret0, _ := ret[0].(cfg.IDGetter)
	return ret0
}

// GetStart indicates an expected call of GetStart
func (mr *MockInterfaceMockRecorder) GetStart() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStart", reflect.TypeOf((*MockInterface)(nil).GetStart))
}

// GetFinish mocks base method
func (m *MockInterface) GetFinish() cfg.IDGetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFinish")
	ret0, _ := ret[0].(cfg.IDGetter)
	return ret0
}

// GetFinish indicates an expected call of GetFinish
func (mr *MockInterfaceMockRecorder) GetFinish() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFinish", reflect.TypeOf((*MockInterface)(nil).GetFinish))
}

// GetPlaces mocks base method
func (m *MockInterface) GetPlaces() []cfg.IDGetter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlaces")
	ret0, _ := ret[0].([]cfg.IDGetter)
	return ret0
}

// GetPlaces indicates an expected call of GetPlaces
func (mr *MockInterfaceMockRecorder) GetPlaces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlaces", reflect.TypeOf((*MockInterface)(nil).GetPlaces))
}

// GetTransitions mocks base method
func (m *MockInterface) GetTransitions() cfg.TransitionRegistryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransitions")
	ret0, _ := ret[0].(cfg.TransitionRegistryInterface)
	return ret0
}

// GetTransitions indicates an expected call of GetTransitions
func (mr *MockInterfaceMockRecorder) GetTransitions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransitions", reflect.TypeOf((*MockInterface)(nil).GetTransitions))
}
