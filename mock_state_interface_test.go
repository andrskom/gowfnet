// Code generated by mockery v2.0.0-alpha.2. DO NOT EDIT.

package gowfnet

import (
	state "github.com/andrskom/gowfnet/state"
	mock "github.com/stretchr/testify/mock"
)

// MockStateInterface is an autogenerated mock type for the StateInterface type
type MockStateInterface struct {
	mock.Mock
}

// GetErrorStack provides a mock function with given fields:
func (_m *MockStateInterface) GetErrorStack() state.ErrStackInterface {
	ret := _m.Called()

	var r0 state.ErrStackInterface
	if rf, ok := ret.Get(0).(func() state.ErrStackInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(state.ErrStackInterface)
		}
	}

	return r0
}

// GetPlaces provides a mock function with given fields:
func (_m *MockStateInterface) GetPlaces() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// IsError provides a mock function with given fields:
func (_m *MockStateInterface) IsError() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsFinished provides a mock function with given fields:
func (_m *MockStateInterface) IsFinished() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsStarted provides a mock function with given fields:
func (_m *MockStateInterface) IsStarted() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MoveTokensFromPlacesToPlaces provides a mock function with given fields: from, to
func (_m *MockStateInterface) MoveTokensFromPlacesToPlaces(from []string, to []string) error {
	ret := _m.Called(from, to)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string, []string) error); ok {
		r0 = rf(from, to)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetFinished provides a mock function with given fields:
func (_m *MockStateInterface) SetFinished() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
